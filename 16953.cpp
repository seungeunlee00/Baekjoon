/*
백준 16953 A->B

문제 
정수 A를 B로 바꾸려고 한다. 가능한 연산은 다음과 같은 두 가지이다.
 - 2를 곱한다.
 - 1을 수의 가장 오른쪽에 추가한다. 
A를 B로 바꾸는데 필요한 연산의 최솟값을 구해보자.

입력
첫째 줄에 A, B (1 ≤ A < B ≤ 10^9)가 주어진다.

출력
A를 B로 바꾸는데 필요한 연산의 최솟값에 1을 더한 값을 출력한다. 
만들 수 없는 경우에는 -1을 출력한다.
*/

#include <iostream>
using namespace std;

int main(){
    int A, B;
    int n = 0; //필요한 연산의 최소값

    cin >> A >> B;

    while(1) {
        if(A == B) {     // A와 B가 같으면 
            cout << ++n; //연산의 최소값 +1 출력
            break;
        }
        if(A > B) {      // A가 B보다 작아지는 연산은 불가능
            cout << "-1";
            break;
        }
        // A < B 일 때
        if(B % 10 == 1) {     // B의 마지막 자릿수가 1이면 
            B = (B - 1) / 10; // 1을 빼고 10으로 나눔
            n++;              // 연산 횟수 +1
        } else if (B % 2 == 0) {  // B가 짝수면 
            B = B / 2;            // 2로 나눔
            n++;                  // 연산 횟수 +1
        } else {
            cout << "-1";     
            break;
        }
    }
    return 0;
}
